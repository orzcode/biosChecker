<div class="blurb">
	<p>
	  <strong
		>Track modern ASRock motherboards and get notified of new bios
		updates</strong
	  >
	</p>
	<p>
	  Usage is easy - select a motherboard, enter your email, and you will
	  be notified if a bios update is released. Limited to
	  one board per email (you may alter by re-selecting).
	</p>
	<p>
	  <em
		>Note: this tool is unofficial and not supported or affiliated with
		ASRock in any way.</em
	  >
	</p>
	<p>
	  This tool is free to use, and long-term reliability is not guaranteed. But if you find it helpful, you are welcome to support the project with a small donation via Ko-fi.
	  <%- include('components/kofiModal') %>
	</p>
	<hr style="border: 1px solid #6b9b1d;">
  </div>
  <form action="/submit" method="POST">
	<span class="hachimitsu" aria-hidden="true">
	  <label for="hachimitsu">&nbsp;</label>
	  <input tabindex="-1" type="text" name="hachimitsu" id="hachimitsu" />
	</span>
	<!-- Form for email subscription -->
	<div class="form-controls">
	  <label for="email">Email:</label>
	  <input
		type="email"
		id="email"
		name="email"
		required
		placeholder="yourname@example.com"
	  />

	  <button type="submit">Subscribe</button>
	</div>

	<!-- Socket selection filters -->
	<div class="filterGroup">
	  <fieldset class="socket-filters">
		<legend class="legendAMD"><strong>AMD</strong></legend>
		<div class="label-group">
		  <label for="am4">
			<input
			  type="checkbox"
			  id="am4"
			  class="socket-checkbox"
			  value="AM4"
			/>
			AM4
		  </label>
		  <label for="am5">
			<input
			  type="checkbox"
			  id="am5"
			  class="socket-checkbox"
			  value="AM5"
			/>
			AM5
		  </label>
		</div>
	  </fieldset>
	  <fieldset class="socket-filters">
		<legend class="legendIntel"><strong>Intel</strong></legend>
		<div class="label-group">
		  <label for="1700">
			<input
			  type="checkbox"
			  id="1700"
			  class="socket-checkbox"
			  value="1700"
			/>
			LGA 1700
		  </label>
		  <label for="1851">
			<input
			  type="checkbox"
			  id="1851"
			  class="socket-checkbox"
			  value="1851"
			/>
			LGA 1851
		  </label>
		</div>
	  </fieldset>
	</div>

	<!-- Table for motherboards -->
	<table id="motherboard-table">
	  <thead>
		<tr>
		  <th>Select</th>
		  <th>Model</th>
		  <th>Maker</th>
		  <th>Socket</th>
		  <th>Link</th>
		  <th>BIOS Page</th>
		</tr>
	  </thead>
	  <tbody id="motherboard-tbody">
		<!-- sort models.json by socket -->
		<!-- limit to items with valid links -->
		<tr>
			<td colspan="6" style="text-align: center;">Loading motherboard data...</td>
		  </tr>
	  </tbody>
	</table>
  </form>

<%- include('components/tableHelper') %>

<script>
	// Store the motherboard data in a JavaScript variable
	window.motherboardData = <%- JSON.stringify(motherboards) %>;
	
	// Function to render the table
	function renderMotherboardTable() {
	  const tbody = document.getElementById('motherboard-tbody');
	  if (!tbody) {
		console.error('Table body element not found');
		return;
	  }
	  
	  let tbodyContent = '';
	  
	  window.motherboardData
		.sort((a, b) => a.socket.localeCompare(b.socket))
		.forEach(mobo => {
		  if (mobo.link && mobo.biospage) {
			tbodyContent += `
			  <tr data-row="${mobo.socket}">
				<td>
				  <input type="radio" required class="mobo-checkbox" name="selectedMobo" 
					value="${mobo.model}" title="Select this motherboard" />
				</td>
				<td data-cell="model">${mobo.model}</td>
				<td data-cell="maker">${mobo.maker}</td>
				<td data-cell="socket">${mobo.socket}</td>
				<td>
				  <a data-cell="link" href="${mobo.link}" target="_blank">Details 
					<svg xmlns="http://www.w3.org/2000/svg" width="0.8em" height="1em" viewBox="0 0 52 52" fill="whitesmoke">
					  <!-- SVG path data -->
					</svg>
				  </a>
				</td>
				<td>
				  <a data-cell="link" href="${mobo.biospage}" target="_blank">BIOSes 
					<svg xmlns="http://www.w3.org/2000/svg" width="0.8em" height="1em" viewBox="0 0 52 52" fill="whitesmoke">
					  <!-- SVG path data -->
					</svg>
				  </a>
				</td>
			  </tr>
			`;
		  }
		});
	  
	  tbody.innerHTML = tbodyContent;
	}
	
	// Try to render immediately if the DOM is already loaded
	if (document.readyState === 'complete' || document.readyState === 'interactive') {
	  setTimeout(renderMotherboardTable, 1);
	} else {
	  // Otherwise wait for DOMContentLoaded
	  document.addEventListener('DOMContentLoaded', renderMotherboardTable);
	}
  </script>