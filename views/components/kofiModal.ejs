<!-- Ko-Fi Modal Component -->
<button id="showKoFi">Support project
	<img src="images/kofi_symbol.svg" width="20" height="16" alt="Ko-Fi" class="kofi-icon" loading="lazy">
  </button>
  
  <div id="koFiModal" class="modal">
	<div class="modal-content">
	  <span class="close">&times;</span>
	</div>
  </div>
  
  <style>
	/* Modal Styling */
	.modal { 
	  display: none; position: fixed; z-index: 1000; left: 0; top: 0; 
	  width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5);
	  justify-content: center; align-items: center; opacity: 0; 
	  transition: opacity 0.3s ease-in-out; 
	}
	.modal-content { 
	  background-color: #ffffff; padding: 10px; border-radius: 8px; max-width: 90%;
	  position: relative; transform: translateY(-20px); transition: transform 0.3s ease-in-out; 
	}
	.close { 
	  position: absolute; top: 10px; right: 15px; font-size: 24px; 
	  cursor: pointer; color: #555; transition: color 0.2s; 
	}
	.close:hover { color: #ff0000; }
	.modal.show { display: flex; opacity: 1; }
	.modal.show .modal-content { transform: translateY(0); }
  
	/* Button Styling */
	#showKoFi {
	  display: inline-flex; align-items: center; gap: 8px;
	  background: #6b9b1d; color: white; border: 1px solid black; padding: 0.1rem 0.5rem 0.2rem 0.5rem;
	  font-size: clamp(1.4rem, 2vw, 1.8rem); cursor: pointer; border-radius: 8px;
	  transition: background 0.3s ease-in-out;
	  max-width: fit-content;
	}
	#showKoFi:hover { filter: brightness(1.1); }
  
	/* Ko-Fi Icon */
	.kofi-icon {
	  width: 20px; height: auto;
	}
	
	/* Loading Indicator */
	.kofi-loader {
	  display: flex;
	  justify-content: center;
	  align-items: center;
	  height: 200px;
	  width: 100%;
	}
	
	.loading-text {
	  font-size: 18px;
	  color: #555;
	}
  </style>
  
  <script>
	document.addEventListener("DOMContentLoaded", () => {
	  const modal = document.getElementById("koFiModal");
	  const showBtn = document.getElementById("showKoFi");
	  const closeBtn = document.createElement("span");
	  closeBtn.innerHTML = "&times;";
	  closeBtn.className = "close";
	  document.querySelector(".modal-content").appendChild(closeBtn);
  
	  let iframeLoaded = false; // Track whether iframe is created
	  let preloadedIframe = null; // Store the preloaded iframe
  
	  // Preload iframe content when browser is idle
	  const preloadIframe = () => {
		if ('requestIdleCallback' in window) {
		  requestIdleCallback(() => {
			if (!iframeLoaded && !preloadedIframe) {
			  // Prevent unload event listeners for bfcache compatibility
			  (function(w) {
				const originalAddEventListener = w.addEventListener;
				w.addEventListener = function(type, listener, options) {
				  if (type === "unload") {
					originalAddEventListener.call(w, "pagehide", listener, options);
					return;
				  }
				  originalAddEventListener.call(w, type, listener, options);
				};
			  })(window);
  
			  // Create but don't append the iframe yet
			  preloadedIframe = document.createElement("iframe");
			  preloadedIframe.src = "https://ko-fi.com/orzcode/?hidefeed=true&widget=true&embed=true&preview=true";
			  preloadedIframe.style.border = "none";
			  preloadedIframe.style.width = "100%";
			  preloadedIframe.style.background = "#202020";
			  preloadedIframe.height = "550";
			  preloadedIframe.title = "Support project";
			  
			  // Listen for the iframe to load
			  preloadedIframe.onload = () => {
				console.log("Ko-fi iframe preloaded and ready");
			  };
			}
		  }, { timeout: 3000 }); // 3 second timeout
		}
	  };
  
	  // Start preloading after critical content is loaded
	  if (document.readyState === 'complete') {
		preloadIframe();
	  } else {
		window.addEventListener('load', preloadIframe);
	  }
  
	  showBtn.addEventListener("click", () => {
		modal.style.display = "flex";
		setTimeout(() => modal.classList.add("show"), 10);
  
		if (!iframeLoaded) {
		  // Show a loading indicator in the modal
		  const loader = document.createElement("div");
		  loader.className = "kofi-loader";
		  loader.innerHTML = `<div class="loading-text">Loading Ko-fi...</div>`;
		  document.querySelector(".modal-content").appendChild(loader);
		  
		  // Use the preloaded iframe if available, otherwise create a new one
		  const iframe = preloadedIframe || document.createElement("iframe");
		  
		  if (!preloadedIframe) {
			// If we didn't preload, set up the iframe now
			iframe.src = "https://ko-fi.com/orzcode/?hidefeed=true&widget=true&embed=true&preview=true";
			iframe.style.border = "none";
			iframe.style.width = "100%";
			iframe.style.background = "#202020";
			iframe.height = "550";
			iframe.title = "Support project";
		  }
		  
		  // Initially hide the iframe
		  iframe.style.opacity = "0";
		  iframe.style.transition = "opacity 0.3s ease-in-out";
		  
		  // When iframe is loaded (or is already loaded), show it and remove the loader
		  const handleIframeLoad = () => {
			if (loader.parentNode) {
			  loader.parentNode.removeChild(loader);
			}
			iframe.style.opacity = "1";
		  };
		  
		  if (preloadedIframe && preloadedIframe.complete) {
			// If iframe was preloaded and is already complete
			handleIframeLoad();
		  } else {
			iframe.onload = handleIframeLoad;
		  }
		  
		  document.querySelector(".modal-content").appendChild(iframe);
		  iframeLoaded = true;
		  preloadedIframe = null; // Clear reference to avoid memory issues
		}
	  });
  
	  closeBtn.addEventListener("click", () => {
		modal.classList.remove("show");
		setTimeout(() => modal.style.display = "none", 300);
	  });
  
	  window.addEventListener("click", (event) => {
		if (event.target === modal) {
		  modal.classList.remove("show");
		  setTimeout(() => modal.style.display = "none", 300);
		}
	  });
	});
  </script>
  
  <!-- Preload Styles Efficiently -->
  <link rel="preload" href="/css/style.css" as="style" onload="this.rel='stylesheet'">
  <noscript><link rel="stylesheet" href="/css/style.css"></noscript>